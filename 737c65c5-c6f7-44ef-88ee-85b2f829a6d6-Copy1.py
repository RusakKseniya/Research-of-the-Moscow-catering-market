#!/usr/bin/env python
# coding: utf-8

# # Исследование рынка заведений общественного питания Москвы

# ***Заказчик***
# 
# Инвесторы из фонда «Shut Up and Take My Money»
# 
# ***Цель***
# 
# Создать комплексное понимание рынка заведений общественного питания в Москве для оказанияподдержки потенциальным
# инвесторам в выборе формата и местоположения их заведения, основанного на фактических данных и анализе предпочтений
# потребителей.
# 
# ***Этапы исследования.***
# 
# 1. Знакомство с данными и предобработка;
# 2. Анализ данных;
# 3. Детализация исследования для открытия кофейни;
# 4. Подготовка презентации.
# 
# 
# ***Описание данных.***
# 
# Работать предстоит с датасетом ***moscow_places.csv*** содержащим следующую информацию:
# - ***name*** (название заведения);
# - ***address*** (адрес заведения);
# - ***category*** (категория заведения, например «кафе», «пиццерия» или «кофейня»);
# - ***hours*** (информация о днях и часах работы);
# - ***lat*** (широта географической точки, в которой находится заведение);
# - ***lng*** (долгота географической точки, в которой находится заведение);
# - ***rating*** (рейтинг заведения по оценкам пользователей в Яндекс Картах (высшая оценка — 5.0));
# - ***price*** (категория цен в заведении, например «средние», «ниже среднего», «выше среднего» и так далее);
# - ***avg_bill*** (строка, которая хранит среднюю стоимость заказа в виде диапазона);
# - ***middle_avg_bill*** (число с оценкой среднего чека, которое указано только для значений из столбца avg_bill, начинающихся с подстроки «Средний счёт»);
# - ***middle_coffee_cup*** (число с оценкой одной чашки капучино, которое указано только для значений из столбца avg_bill, начинающихся с подстроки «Цена одной чашки капучино»);
# - ***chain*** (число, выраженное 0 или 1, которое показывает, является ли заведение сетевым. 0 — заведение не является сетевым, 1 — заведение является сетевым);
# - ***district*** (административный район, в котором находится заведение, например Центральный административный округ);
# - ***seats*** (количество посадочных мест).

# ## Знакомство с данными

# In[1]:


# Загружаем необходимые билиотеки
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import re
import plotly.express as px
import json
from plotly import graph_objects as go

from folium import Map, Choropleth, GeoJsonTooltip
from folium import Map, Marker 
from folium.plugins import MarkerCluster

# Улучшение качества графиков
get_ipython().run_line_magic('config', "InlineBackend.figure_format = 'retina'")


# In[2]:


# Coxраняем датасет в переменную places
places = pd.read_csv('/datasets/moscow_places.csv')


# In[3]:


# Общая информация о датасете
places.info()


# In[4]:


# Количество уникальных значений каждого столбца датасета
unique_counts = {column: places[column].nunique() for column in places.columns}
unique_counts_places = pd.DataFrame(list(unique_counts.items()), columns=['column', 'unique_count'])
print(unique_counts_places)


# In[5]:


#Просмотр содержания первых 10 строк таблицы
places.head(10)


# In[6]:


# Уникальные значения столбца с категориями заведений
places['category'].unique()


# In[7]:


# Уникальные значения столбца с категориями цен
places['price'].unique()


# In[8]:


# Уникальные значения столбца административных округов
places['district'].unique()


# ### Промежуточный вывод

# В датасете представлены 8406 заведений , которые распределены по 8 категориям:
# - кафе
# - ресторан
# - кофейня
# - пиццерия
# - бар/паб
# - быстрое питание
# - булочная
# - столовая.
# 
# В датасет включена информация о заведениях 9 административных окургов Москвы:
# - Северный административный округ
# - Северо-Восточный административный округ
# - Северо-Западный административный округ
# - Западный административный округ
# - Центральный административный округ
# - Восточный административный округ
# - Юго-Восточный административный округ
# - Южный административный округ
# - Юго-Западный административный округ
# 
# Стоит отметить, что на сегоняшний день в Москве 12 аминистративных округов - 3 из которых не рассмотрены в датасете:
# - Троицкий
# - Новомосковский 
# - Зеленоградский. 
# 
# Также заведения разбиты по 4 ценовым категориям:
# - выше среднего
# - средние
# - высокие
# - низкие.
# 
# В таблице присутсвуют 3 типа данных:  
# - float64
# - int64
# - object.

# ## Предобработка данных

# При детальном изучении названий заведений можно заметить, что встречаются названия сетевых заведений например, ***Донер Кебаб*** и ***Донер кебаб*** или ***Вкус востока*** и ***Вкус Востока*** у которых различный регистр. Поэтому приведем названия всех сетевых завдений к строчному регистру. Это позволит корректно распознавать заведения одной сети(то есть с одинаковым названием)

# In[9]:


places['name'] = places['name'].str.lower()


# Теперь проврим датасет на дубликаты. Сначала проверим все столбцы.

# In[10]:


# Проверим наш датасет на наличие строк-дубликатов
print(f'Количество строк-дубликатов в датасете: {places.duplicated().sum()}')


# Попробуем выполнить поиск явных дубликатов по столбца ***name*** и ***address***

# In[11]:


places.loc[places.duplicated(subset=['name', 'address'], keep=False)]


# Найдено 3 дубликата, это заведения more poke, раковарня клешни и хвосты, хлеб да выпечка. Удалим эти строки из датасета

# In[12]:


places.drop_duplicates(subset=['name', 'address'], keep='first', inplace=True)


# Неявные дубликаты также могли бы встретиться в столбцах ***category*** и ***district***, но на этапе знакомства с данными мы просмотрели уникальные значения столбца и дубликатов не обнаружили.

# In[13]:


#Процент пропущенных значений в каждом столбце датасета
pd.DataFrame(round(places.isna().mean()*100,2)).style.background_gradient('coolwarm')


# Ознакомившись с данными таблицы, можно сделать вывод, что механизм формирования пропусков MNAR и MAR, при которых данные отсутствуют в зависимости от неизвестных факторов или же пропуски образованы не случайным образом, но их заполнение корректными данными на основании таблицы не возможно. Поэтому решено оставить пропуски без изменений на этом этапе.

# Добавим столбец ***street***, в который вынесем названия улиц из столбца с адресом, для этого используем модуль re из бибилиотека pandas, и через функцию с регулярным выражением, которое ищет текст между запятой и следующей запятой или концом строки, что позволяет получить название улицы. 

# In[14]:


def extract_street(address):
    match = re.search(r',\s*(.*?)(?:,\s*\d+|$)', address)
    return match.group(1) if match else None

# Применяем функцию к столбцу address
places['street'] = places['address'].apply(extract_street)

# Выводим результат
places[['address', 'street']]


# Также добавим столбец ***is_24_7*** с булевым значением True/False, в зависимости от того работает ли заведение ежедневно и кргулосуточно или имеет ограничения по времени работы. Если круглосуточно - True, если есть ограничения по дням или времени работы то False.

# In[15]:


def check_24_7(hours):
    if pd.isna(hours): 
        return np.nan 
    if isinstance(hours, str): 
        return 'круглосуточно' in hours
    return False  

# Применяем функцию
places['is_24_7'] = places['hours'].apply(check_24_7)

places[['hours','is_24_7']]


# ### Промежуточный вывод

# На этапе предобработки данных были добавлены столбцы:
# - ***street*** с указанием улилицы(проспекта) где расположено заведение;
# - ***is_24_7*** с указанием является ли заведение крглосуточным (значения True/False);
# 
# Найдены и удалены 3 дубликата дубликаты заведений с названиям:
# - More Poke 
# - Раковарня Клешни и Хвосты
# - Хлеб да Выпечка
# таким образом в датасете осталось 8403 заведения.
# 
# Названия всех сетевых заведений приведены к формату - каждое слово в названии с заглавной буквы. Во избежании путаницы и для коррктности подсчета сетевых заведений в датасете.
# 
# Пропуски в данных не заполняются так как нет возмодности корректно восстановить данные.

# ## Анализ данных

# ### Категории заведений в данных

# Рассмотрим данные на предмет деления по категориям заведений.

# In[16]:


# Создаем новую переменную и группируем данные по категориям
category_places = places.groupby('category')['name'].count().reset_index()
category_places.columns = ['category', 'count']

# Добавляем новый столбец с процентным соотношением
total_count = places['name'].count()
category_places['percentage'] = ((category_places['count'] / total_count) * 100).round(2)
category_places = category_places.sort_values(by = 'percentage', ascending = False)
category_places


# In[17]:


#Визуализируем данные из полученной таблицы
fig = px.bar(category_places, 
             x='category', 
             y='count', 
             text=category_places['percentage'].astype(str) + '%',
             title='Категории объектов общественного питания в Москве',
             template='plotly_white'
            )
fig.update_layout(xaxis_title='Категории заведений',
                  yaxis_title='Количество заведений',
                  xaxis={'categoryorder':'total descending'})
fig.show()


# #### Промежуточный вывод

# Более 50% заведений в датасете это кафе и рестораны.  
# Cледующая по популярности категория это кофейни - почти 17% от общего числа заведений.  
# Бары и пабы менее популярный формат - 9% от общего числа заведений, последние 4 категории можно отнести к заведениям простого и быстрого перекуса - в сумме они составляют 21.5% от общего числа завдений.  
# 
# С точки зрения выбора формата для открытия нового заведения стоит учесть, что не смотря на популярность кафе и ресторанов, о достаточно большом количестве заведений такого формата и предполагает высокую конкуренцию в рамках данных категорий. Тогда как формат кофейни - на 3 месте по количеству заведений и вероятно, что локаций для окрытия такого заведения будет больше, а конкуренции меньше.
# 
# В целом, таблица показывает разнообразие заведений общественного питания в Москве, что позволяет удовлетворить различные вкусы и предпочтения жителей и гостей города.

# ### Количество посадочных мест в заведениях

# Для расчета медианного количества мест в заведениях по категориям, поставим заглушку (-1) на пропуски в столбце ***seats***. 

# In[18]:


places['seats'] = places['seats'].fillna(-1)


# In[19]:


#Исключаем ячейки со значением '-1' и группируем данные по категориям заведений
seats = places.query('seats != -1').groupby('category').agg(seats_median=('seats', 'median')).sort_values(by='seats_median', ascending=False).reset_index()
seats['seats_median'] = seats['seats_median'].astype('int')
seats


# In[20]:


#Строим график на основании полученной таблицы со медианным количеством посадочных мест.
fig = px.bar(seats.sort_values(by='seats_median', ascending=True), 
             x='seats_median',
             y='category', 
             text='seats_median',
             template='plotly_white'
            )

fig.update_layout(title='Количество посадочных мест в объектах общественного питания по категориям',
                   xaxis_title='Количество посадочных мест',
                   yaxis_title='Категория объекта общественного питания')
fig.show() 


# #### Промежуточный вывод

# Рестораны имеют наибольшее медианное количество мест (86), что может свидетельствовать о том, что они предназначены для более крупных групп людей и предлагают более длительное времяпрепровождение гостей в заведений. Это также может указывать на то, что рестораны стремятся обеспечить комфортное пространство для своих посетителей.
# 
# Бары и пабы занимают второе место по количеству мест (82). Это может говорить о том, что такие заведения также ориентированы на компании, что делает их популярными для встреч с друзьями и отдыха.
# 
# Кофейни (80) и столовые (75) имеют достаточно высокие показатели медианного количества мест, что может указывать на их популярность среди тех кто ищет более неформальные и быстрые варианты питания.
# 
# Быстрое питание (65) и кафе (60) 
# 
# Пиццерии (55) и булочные (50) имеют наименьшее медианное количество мест. Это может свидетельствовать о том, что эти заведения чаще всего предназначены для быстрого перекуса или на вынос, а не для длительного пребывания.
# 
# 

# ### Соотношение сетевых и несетевых заведений 

# In[21]:


chain_no_chain = places['chain'].value_counts()

# Получаем общее количество заведений
total_places = len(places)

# Расчет процентов
chain_percent = (chain_no_chain / total_places) * 100

# Создаем DataFrame для удобного отображения
result = pd.DataFrame({
    'count': chain_no_chain,
    'percent': chain_percent
}).reset_index()

# Переименовываем столбцы 
result.columns = ['chain', 'count', 'percent']

# Выводим результат
result


# In[22]:


# Построим круговую диаграмму  
labels = ['Несетевые заведения', 'Сетевые заведения']
sizes = result['count']  # Количество заведений
colors = ['#4169E1','#40E0D0'] 
explode = (0.1, 0) 

plt.figure(figsize=(8, 6))
plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=140)

plt.axis('equal')  
plt.title('Соотношение сетевых и несетевых заведений в Москве', fontsize = 18)
plt.show()


# #### Промежуточный вывод

# - ***Несетевые заведения:*** 5200 заведение, что составляет примерно 61.88% от общего числа заведений.
# 
# - ***Сетевые заведения:*** 3203 заведений, что составляет примерно 38.11% от общего числа заведений.
# 
# В Москве значительно больше несетевых заведений, чем сетевых. Это может свидетельствовать о разнообразии и индивидуальности в предложении общественного питания, так как несетевые заведения часто представляют собой уникальные рестораны, кафе и бары, которые могут предлагать оригинальные концепции и меню.
# 
# Хотя сетевые заведения составляют меньшую долю, они могут обеспечивать стабильное качество и узнаваемость, что привлекает определенную категорию клиентов. Сетевые рестораны часто имеют более высокие объемы продаж и могут быть более устойчивыми в условиях экономической нестабильности.
# 
# Данные могут указывать на тенденцию к увеличению интереса к уникальным и местным заведениям, что может быть связано с изменением потребительских предпочтений, особенно среди молодежи, которая ценит оригинальность и индивидуальность.

# ### Категории сетевых заведений 

# Рассмотрим категории сетевых заведений. Добавим новую переменную ***chain_counts*** сохранив в нее все сетевые заведения сгруппированные по категориям.

# In[23]:


chain_counts = places.groupby('category').agg(
    total_count=('name', 'count'),  # Общее количество заведений в категории
    chain_count=('chain', 'sum')     # Количество сетевых заведений в категории
)

# Рассчет процента сетевых заведений
chain_counts['chain_percentage'] = ((chain_counts['chain_count'] / chain_counts['total_count']) * 100).round(2)

# Сброс индекса для удобного отображения
chain_counts = chain_counts.reset_index()
chain_counts = chain_counts.sort_values(by='chain_percentage', ascending=False)

# Печать результатов
chain_counts


# In[24]:


fig = px.bar(chain_counts,
             x='chain_count',  # Количество сетевых заведений
             y='category',     # Категория объекта
             text=chain_counts['chain_percentage'].astype(str) + '%',  # Процент сетевых заведений
             template='plotly_white',
             title='Количество сетевых заведений и процент по категориям',
             labels={'chain_count': 'Количество сетевых заведений',
                     'category': 'Категория общественного питания'}
            )

# Оформление графика
fig.update_layout(
    xaxis_title='Количество сетевых заведений',
    yaxis_title='Категория объекта общественного питания',
    yaxis=dict(categoryorder='total ascending')  # Сортировка по убыванию доли
)

fig.show()


# #### Промежуточный вывод

# - Наибольшее количество сетевых заведений представлено в категориях "кафе" (779 заведений, 32.77% от всех заведений категории) и "ресторан" (730 заведений, 35.7% от всех заведений категории).   
# - Кофейни занимают третье место по количеству заведений (720 заведений, 50.96% от всех заведений категории). Это может свидетельствовать о растущем интересе к культуре кофе и местам, где можно не только выпить кофе, но и провести время в уютной обстановке.  
# - Форматы "быстрого питания" (232 заведения, 38.47% от всех заведений категории) и "пиццерии" (330 заведений, 52.13%) также имеют значительную долю, что указывает на спрос на удобные и быстрые варианты питания.  
# - Категории "столовая" (88 заведений, 27.94% от всех заведений категории) и "булочная" (157 заведений, 61.33% от всех заведений категории) имеют наименьшее количество заведений. Это может говорить о том, что такие форматы менее популярны среди сетевых заведений.
# 
# Сетевые заведения общественного питания в Москве демонстрируют разнообразие форматов, с акцентом на кафе и рестораны. 

# ### Топ-15 популярных сетей в Москве. 

# Для определения самых популярных сетевых заведений, выделить сетевые заведений из датасета и затем сгруппировать их по названию сети и посчитать количество заведений.   
# 
# Определение категории сетевых заведений более трудная задача, так как в полученном датасете у заведний одной сети могут быть разные категории, что модет быть ошибкой - но наверняка мы не знаем, поэтому выберем для каждой сети наиболее часто встречающуюся категорию заведения и выведем в отдельный столбец полученной таблицы.

# In[25]:


chain_places_1 = places[places['chain'] == 1]

top_chains = places[places['chain'] == 1].groupby('name')['name'].count().reset_index(name='count')

# Сортируем по количеству заведений в сети и выбираем топ-15
top_chains = top_chains.sort_values(by='count', ascending=False).head(15)

# Группируем по названию сети и категории, считаем количество заведений в каждой категории
category_counts = chain_places_1.groupby(['name', 'category']).size().reset_index(name='count')

# Находим наиболее популярную категорию для каждой сети
top_categories = category_counts.loc[category_counts.groupby('name')['count'].idxmax()]

# Объединяем результаты с таблицей top_chains
top_chains_with_categories = top_chains.merge(top_categories[['name', 'category']], on='name', how='left')

# Переименовываем столбец
top_chains_with_categories.rename(columns={'category': 'most_popular_category'}, inplace=True)

# Выводим результат
top_chains_with_categories


# In[26]:


top_chains_with_categories['most_popular_category'] = top_chains_with_categories['most_popular_category'].str.strip()

fig = px.bar(
    top_chains_with_categories.sort_values(by='count', ascending=False),
    x='count',
    y='name',
    text='most_popular_category',
    color='most_popular_category',  # Задаем цвет по категориям
    color_discrete_sequence=px.colors.qualitative.Set1,  # Выбор палитры цветов
    template='plotly_white'
)

fig.update_layout(
    title='ТОП 15 популярных сетевых заведений по категориям',
    xaxis_title='Количество заведений',
    yaxis_title='Название заведения'
)

fig.show()


# #### Промежуточный вывод

# Мы получили список 15 самых популрнях сетей общественного питания, отталкиваясь от количества заведений в регионе. Наиоболее распространена сеть ***Шоколадница*** - 120 заведений, замыкает Топ- 15 сеть ***Му-му*** - 27 заведений. 
# 
# Доля категорий заведений в Топ 15 распределена следюущим образом:
# - ***кофейни*** 5 сетей,
# - ***кафе*** 4 сети,
# - ***ресторан*** 3 сети
# - ***пиццерия*** 2 сети
# - ***булочная*** 1 сеть.
# 
# Объединяет этот список то, что следующие категории не попадают в ТОП самых популярных сетевых заведений, а именно:
# - бар/паб
# - столовая
# - быстрое питание.
# 

# ### Распредение заведений по района Москвы

# На этапе знакомсвтва с данными мы выяснили, что заведения представленные в датасете распределены по 9 административным округам Москвы:
# - Северный административный округ
# - Северо-Восточный административный округ
# - Северо-Западный административный округ
# - Западный административный округ
# - Центральный административный округ
# - Восточный административный округ
# - Юго-Восточный административный округ
# - Южный административный округ
# - Юго-Западный административный округ

# Посчитаем общее количество заведений в каждом административном округе, а также количество заведений каждой категории. 

# In[27]:


district_places = places.groupby('district')['name'].count().reset_index(name='count_places')
district_places.sort_values(by = 'count_places', ascending = False)


# In[28]:


category_counts = places.groupby(['district', 'category']).size().reset_index(name='count')
category_counts_pivot = category_counts.pivot(index='district', columns='category', values='count')
category_counts_pivot


# In[29]:


category_counts_pivot.reset_index(inplace=True)  
category_counts_melted = category_counts_pivot.melt(id_vars='district', var_name='category', value_name='count')

# Создаем график
fig = px.bar(category_counts_melted,
             x='count',
             y='district',
             color='category',
             template='plotly_white',
             title='Количество заведений каждой категории по районам')

fig.update_layout(xaxis_title='Количество заведений',
                  yaxis_title='Название округа',
                  yaxis={'categoryorder':'total ascending'})

fig.show()


# #### Промежуточный вывод

# - ***Центральный административный округ*** выделяется на фоне других округов по количеству заведений. Он имеет наибольшее количество заведений во всех категориях, особенно в категориях "ресторан" (670) и "кафе" (464). Это может свидетельствовать о высокой концентрации бизнеса и туристов в этом районе.
# - ***Северный и Северо-Восточный*** административные округа показывают довольно высокие показатели в категориях "ресторан" и "кафе", что может говорить о развитой инфраструктуре общественного питания.
# - ***Восточный административный округ*** также имеет значительное количество заведений, особенно в категории "кафе" (272) и "ресторан" (160).
# - Южные округа (***Юго-Восточный и Юго-Западный***) имеют меньше заведений по сравнению с Центральным и Восточным округами, что может указывать на менее развитую инфраструктуру или меньшую плотность населения.
# - ***Северо-Западный административный округ*** имеет наименьшее количество заведений в большинстве категорий, что может свидетельствовать о том, что этот район менее популярен для общественного питания.
# 
# В большинстве округов наблюдается высокая концентрация заведений в категориях "ресторан" и "кафе", что может указывать на предпочтения жителей и туристов в выборе мест для питания. Также категория "кофейня" занимает 3 место по присутсвию во всех районах - что говорит о востребованности данного формата, и о меньшей конкуренции в нише чем у "ресторана" и "кафе".
#  
#  

# ### Средние рейтини по категориям заведений

# Сгруппируем данные по столбцу с категорией заведений и рассчитаем средний рейтинг.

# In[30]:


places_rating = (places.groupby('category').agg(rating_mean=('rating', 'mean')).sort_values(by='rating_mean', ascending=False).reset_index()).round(2)
places_rating


# In[31]:


#Построим график на основании полученной таблицы
fig = px.bar(places_rating,
             x='rating_mean',
             y='category',
             text='rating_mean',
             template='plotly_white', 
             color='category'                   
            )

fig.update_layout(title='Распределение средних рейтингов по категориям заведений',
                   xaxis_title='Рейтинг',
                   yaxis_title='Название категорий')

fig.update_xaxes(range=[4, 4.5])
fig.show()


# #### Промежуточный вывод

# - Категория ***бар/паб*** имеет самый высокий средний рейтинг (4.39). Это может свидетельствовать о том, что заведения этой категории предлагают качественные услуги и атмосферу, что привлекает клиентов. Но также, высокую оценку заведение может получать ввиду развлекательного характера и употребления алкоголя посетителями, что вызывает ассоциацию с отдыхом и расслаблением, а соответственно посетители могут быть склонны ставить более высокую оценку.  
# - ***Рестораны*** (4.29) и ***пиццерии*** (4.30) также имеют высокие средние рейтинги относительно общей картины.
# 
# - ***Кофейни*** (4.28) и ***булочные*** (4.27) имеют немного более низкие, но все еще хорошие рейтинги. Это может говорить о том, что клиенты довольны качеством продукции, но есть возможность для улучшения.
# 
# - ***Столовые*** (4.21) и заведения ***быстрого питания*** (4.05) имеют самые низкие средние рейтинги среди представленных категорий. Это может указывать на то, что клиенты менее удовлетворены качеством еды и обслуживания в этих заведениях, что может быть связано с их ценовой политикой или общим уровнем сервиса.
# 
# 
# Интересно, что категория  ***Кафе*** (4.12) - которая занимает первое место по распространенности формата в Москве занимает предпоследнее место в рейтинге. Это говорит о том, что не смотря на востребованность посетители считают что возмодно улучшения качеста предлагаемой еды и обслуживания.

# ### Фоновая картограмма со средним рейтингом заведений каждого района

# Сначала сгруппируем датасет по административным округам и посчтаем средний рейтинг расположенных в них заведений сохранив в переменную ***rating_district_mean***.

# In[32]:


rating_district_mean = places.groupby('district', as_index=False)['rating'].agg('mean').round(2)
rating_district_mean = rating_district_mean.sort_values(by = 'rating', ascending = False)
rating_district_mean


# In[33]:


# загружаем JSON-файл с границами округов Москвы
state_geo = '/datasets/admin_level_geomap.geojson'

# moscow_lat - широта центра Москвы, moscow_lng - долгота центра Москвы
moscow_lat, moscow_lng = 55.751244, 37.618423

# создаём карту Москвы
m = Map(location=[moscow_lat, moscow_lng], zoom_start=10, tiles='Cartodb Positron')

# создаём хороплет с помощью конструктора Choropleth и добавляем его на карту
Choropleth(
    geo_data=state_geo,
    data=rating_district_mean,
    columns=['district', 'rating'],
    key_on='feature.name',
    fill_color='YlGnBu',
    fill_opacity=0.8,
    legend_name='Средний рейтинг заведений по районам',
).add_to(m)

# выводим карту
m


# #### Промежуточный вывод
# 
# На картограмме видно, что самый высокий средний рейтинг у заведений расположенных в Центральном округе 4.38, а самый низкий в Юго-Восточном округе 4.10.  Закономерность логичная, высока вероятность что в Центральном округе более дорогие завдеения - рассчитаные как на жителей с более высоким доходом, так и на туристов. И вероятно имеющие более высокий уровень сервиса, качества блюд и более проработанные в плане концептуальности заведения.

# ### Отображение всех заведений датасета на карте с помощью кластеров

# In[34]:


# moscow_lat - широта центра Москвы, moscow_lng - долгота центра Москвы
moscow_lat, moscow_lng = 55.751244, 37.618423

# создаём карту Москвы
m = Map(location=[moscow_lat, moscow_lng], zoom_start=10, tiles="Cartodb Positron")
# создаём пустой кластер, добавляем его на карту
marker_cluster = MarkerCluster().add_to(m)

# пишем функцию, которая принимает строку датафрейма,
# создаёт маркер в текущей точке и добавляет его в кластер marker_cluster
def create_clusters(row):
    Marker(
        [row['lat'], row['lng']],
        popup=f"{row['name']} {row['rating']}",
    ).add_to(marker_cluster)

# применяем функцию create_clusters() к каждой строке датафрейма
places.apply(create_clusters, axis=1)

# выводим карту
m


# ### Топ-15 улиц по количеству заведений

# Сгруппируем таблицу по столбцу ***street*** и посчитаем количество заведение на каждой улице

# In[35]:


street_places = places.groupby('street').size().reset_index(name='count_places')
street_places = street_places.sort_values(by='count_places', ascending = False)
street_places.columns = ['street', 'count']
top_15_streets = street_places.head(15)
top_15_streets.columns = ['street', 'count']
top_15_streets


# In[36]:


streets_category = places.groupby(['street', 'category'])['name'].count().reset_index()
streets_category.columns = ['street', 'category', 'count']
streets_category.sort_values('count', ascending=False)
streets_category = streets_category[streets_category['street'].isin(top_15_streets['street'])]
streets_category


# In[37]:


fig = px.bar(streets_category,
             x='count',
             y='street',
             template='plotly_white',                   
             color='category'
            )

fig.update_layout(title='Распределение категорий заведений на самых популярных улицах',
                   xaxis_title='Количество заведений',
                   yaxis_title='Название улиц',
                   yaxis={'categoryorder':'total ascending'}
                 )
fig.show()


# На графике можно заметить, что не на каждой из указанных улиц присутствуют все категории заведений. Проверим это с помощью таблицы.

# In[38]:


pivot_table = streets_category.pivot(index='street', columns='category', values='count')
# Заменяем NaN на 0, если есть категории без заведений на улице
pivot_table = pivot_table.fillna(0)
# Вывод результата
pivot_table


# #### Промежуточный вывод
# 

# По графику заметно, что самое большое количество заведений 184, расположены на ***проспекте Мира*** , а меньше всего  48, на ***Пятницкой улице***.
# 
# По таблице выше мы видим, что не смотря на популярность этих улиц не все категории заведений на них представлены:  
# - ***булочная*** на 5 из 15 улиц этот формат отсутствует;
# - ***пиццерия*** отсутствует на 1 из 15 улиц;
# - ***столовая*** отсутствует на 3 из 15 улиц;
# 
# Возможно, стоит детально рассмотреть открытие отсутсвующего формата заведений на одной из популряных улиц из списка, так как трафик априори здесь высок, а конкурентов в категории нет.

# ### Улицы, на которых находится только один объект общепита

# In[39]:


streets_with_one_place = places['street'].value_counts().reset_index()
streets_with_one_place.columns = ['street', 'count']
streets_with_one_place = streets_with_one_place[streets_with_one_place['count'] == 1]
streets_with_one_place


# In[40]:


streets_category = places.groupby(['street', 'category'])['name'].count().reset_index()
streets_category.columns = ['street', 'category', 'count']
streets_category.sort_values('count', ascending=False)

category_of_one_place_street = streets_category[streets_category['street'].isin(streets_with_one_place['street'])]
category_of_one_place_street = category_of_one_place_street.groupby('category')['street'].count()
category_of_one_place_street.columns = ['category', 'count']
category_of_one_place_street


# #### Промежуточный вывод
# 

# Улиц, на которых расположено только одно заведение обещственного питания в датасете 552.  
# Самая частая категория заведений на таких улицах - ***Кафе*** (205 объектов), далее по популярности категория ***Ресторан*** (105 оъектов), на 3 месте ***Кофейня*** (98 объектов).

# ### Медианный средний чек заведений в зависимости от административного округа

# In[41]:


places['middle_avg_bill'] = pd.to_numeric(places['middle_avg_bill'], errors='coerce')

# Группируем по району и вычисляем медиану значений среднего чека
median_avg_bill_per_district = places.groupby('district')['middle_avg_bill'].median().reset_index()
median_avg_bill_per_district.columns = ['district', 'median_avg_bill']
median_avg_bill_per_district = median_avg_bill_per_district.sort_values(by ='median_avg_bill', ascending = False)

# Печатаем результат
median_avg_bill_per_district


# In[42]:


state_geo = '/datasets/admin_level_geomap.geojson'

# moscow_lat - широта центра Москвы, moscow_lng - долгота центра Москвы
moscow_lat, moscow_lng = 55.751244, 37.618423

# создаём карту Москвы
m2 = Map(location=[moscow_lat, moscow_lng], zoom_start=10, tiles='Cartodb Positron')

# создаём хороплет с помощью конструктора Choropleth и добавляем его на карту
Choropleth(
    geo_data=state_geo,
    data=median_avg_bill_per_district,
    columns=['district', 'median_avg_bill'],
    key_on='feature.name',
    fill_color='YlGnBu',
    fill_opacity=0.8,
    legend_name='Медианный чек заведений общепита по административным округам Москвы',
).add_to(m2)

# выводим карту
m2


# #### Промежуточный вывод

# На картограмме видно, что наиболее высокий медианный средний чек у заведений расположенных ***Центральном административном округе*** 1000 рублей, такой же показатель и у ***Западного админитсративного округа***.
# Самый низкий чек у заведений расположенных в ***Юго-Восточном административном округе***.
# 
# Можно заметить что выше средний чек в Северо-Западной части Москвы и непосредственно в Центре.

# ### Общий вывод по разделу

# Проведенный анализ выявил следующее:  
# 
# 1. Если рассматривать заведения в разрезе категорий, то:
# - самая распространенная категория это Кафе, в нее входит 2378 заведений, 28.3% от общего количества заведений;
# - на втором месте по популярности категория Ресторан, к этой категории относится 2043 заведения или 24.3% от общего количества заведений;  
# - третяя по популярности категория Кофейня, в этой категории 1413 заведений, что составляет 16.8% от общего числа.
# - Далее идут заведения категорий Бар/паб, Приццерия, Быстрое питание, каждая из категорий включает от 603 до 765 заведений (от 7.2% до 9.1% от общего числа);
# - меньше всего заведений категорий Столовая и Булочная (315 и 256 заведений соответственно или 3.7% и 3.1% от общего числа).
# 
# 2. По количеству посадочных мест:
# - в среднем от 80 до 86 посадочных мест имеют заведения категорий Ресторан, Бар/Паб, Кофейня.
# - Столовая и Быстрое питание в среднем могут посадить от 65 до 75 человек.
# - Кафе, Пиццерия и Булочная показали среднее количество мест от 50 до 60.
# 
# 3. По соотношению сетевых и несетевых заведений:
# - ***Несетевые заведения:*** 5200 заведение, что составляет примерно 61.88% от общего числа заведений.
# - ***Сетевые заведения:*** 3203 заведений, что составляет примерно 38.11% от общего числа заведений.
# 
# 4. Категории сетевых заведений:
# - Наибольшее количество сетевых заведений представлено в категориях "кафе" (779 заведений, 32.77% от всех заведений категории) и "ресторан" (730 заведений, 35.7% от всех заведений категории).   
# - Кофейни занимают третье место по количеству заведений (720 заведений, 50.96% от всех заведений категории). Это может свидетельствовать о растущем интересе к культуре кофе и местам, где можно не только выпить кофе, но и провести время в уютной обстановке.  
# - Форматы "быстрого питания" (232 заведения, 38.47% от всех заведений категории) и "пиццерии" (330 заведений, 52.13%) также имеют значительную долю, что указывает на спрос на удобные и быстрые варианты питания.  
# - Категории "столовая" (88 заведений, 27.94% от всех заведений категории) и "булочная" (157 заведений, 61.33% от всех заведений категории) имеют наименьшее количество заведений. Это может говорить о том, что такие форматы менее популярны среди сетевых заведений.
# 
# 5.Топ-15 популярный сетей:
# Наиоболее распространена сеть ***Шоколадница*** - 120 заведений, замыкает Топ- 15 сеть ***Му-му*** - 27 заведений. 
# 
# Доля категорий заведений в Топ 15 распределена следюущим образом:
# - ***кофейни*** 5 сетей,
# - ***кафе*** 4 сети,
# - ***ресторан*** 3 сети
# - ***пиццерия*** 2 сети
# - ***булочная*** 1 сеть.
# 
# 6. Распредение категорий заведений по районам:
# - ***Центральный административный округ*** выделяется на фоне других округов по количеству заведений. Он имеет наибольшее количество заведений во всех категориях, особенно в категориях "ресторан" (670) и "кафе" (464). Это может свидетельствовать о высокой концентрации бизнеса и туристов в этом районе.
# - ***Северный и Северо-Восточный*** административные округа показывают довольно высокие показатели в категориях "ресторан" и "кафе", что может говорить о развитой инфраструктуре общественного питания.
# - ***Восточный административный округ*** также имеет значительное количество заведений, особенно в категории "кафе" (272) и "ресторан" (160).
# - Южные округа (***Юго-Восточный и Юго-Западный***) имеют меньше заведений по сравнению с Центральным и Восточным округами, что может указывать на менее развитую инфраструктуру или меньшую плотность населения.
# - ***Северо-Западный административный округ*** имеет наименьшее количество заведений в большинстве категорий, что может свидетельствовать о том, что этот район менее популярен для общественного питания.
# 
# 7.Средний рейтинг заведений по категориям:
# - Категория ***бар/паб*** имеет самый высокий средний рейтинг (4.39). Это может свидетельствовать о том, что заведения этой категории предлагают качественные услуги и атмосферу, что привлекает клиентов. Но также, высокую оценку заведение может получать ввиду развлекательного характера и употребления алкоголя посетителями, что вызывает ассоциацию с отдыхом и расслаблением, а соответственно посетители могут быть склонны ставить более высокую оценку.  
# - ***Рестораны*** (4.29) и ***пиццерии*** (4.30) также имеют высокие средние рейтинги относительно общей картины.
# 
# - ***Кофейни*** (4.28) и ***булочные*** (4.27) имеют немного более низкие, но все еще хорошие рейтинги. Это может говорить о том, что клиенты довольны качеством продукции, но есть возможность для улучшения.
# 
# - ***Столовые*** (4.21) и заведения ***быстрого питания*** (4.05) имеют самые низкие средние рейтинги среди представленных категорий. Это может указывать на то, что клиенты менее удовлетворены качеством еды и обслуживания в этих заведениях, что может быть связано с их ценовой политикой или общим уровнем сервиса.
# 
# 8. Средний рейтинг заведений по районам:  
# 
# Самый высокий средний рейтинг у заведений расположенных в Центральном округе 4.38, а самый низкий в Юго-Восточном округе 4.10.  Вероятно Центральном округе более дорогие заведения, так как они рассчитаны как на жителей с более высоким доходом, так и на туристов. И вероятно имеющие более высокий урвень сервиса и качества блюд и более проработанные в плане концептуальности заведения.
# 
# 9. Топ 15 улиц с самыми большим количеством заведений:   
# 
# Самое большое количество заведений 184, расположены на ***проспекте Мира*** , а меньше всего  48, на ***Пятницкой улице***.
# Не смотря на популярность этих улиц не все категории заведений на них представлены:  
# - ***булочная*** на 5 из 15 улиц этот формат отсутствует;
# - ***пиццерия*** отсутствует на 1 из 15 улиц;
# - ***столовая*** отсутствует на 3 из 15 улиц;
# 
# Возможно, стоит детально рассмотреть открытие отсутсвующего формата заведений на одной из популряных улиц из списка, так как трафик априори здесь высок, а конкурентов в категории нет.
# 
# 10. Наиболее высокий медианный средний чек у заведений расположенных ***Центральном административном округе*** 1000 рублей, такой же показатель и у ***Западного админитсративного округа***.
# Самый низкий чек у заведений расположенных в ***Юго-Восточном административном округе***.
# Можно заметить что выше средний чек в Северо-Западной части Москвы и непосредственно в Центре.

# ## Детализация исследования: открытие кофейни

# ### Количество кофеен и особенности их расположения

# Для начала определим количество кофеен в датасете ***places***

# In[43]:


coffeeshop_places = places[places['category'] == 'кофейня'].reset_index()
coffeeshop_places


# 1413 заведений расположено в Москве согласно полученному датасету. Теперь рассмотрим количество кофеен в каждом из представленных административных округов.

# In[44]:


coffeeshop_per_district = coffeeshop_places.groupby('district').size().reset_index(name='count')
coffeeshop_per_district.columns = ['district', 'count']
coffeeshop_per_district = coffeeshop_per_district.sort_values(by = 'count', ascending = False)
coffeeshop_per_district


# Перенесем на данные на карту и посмотрим как располагаются кофейни по районам. Сначала с помощью кластеров отметим их на карте и отметим районы в зависимости от количества кофеен которые там расположены. Наложим на карту с кластерами фоновую картограмму.

# In[45]:


# Загрузка GeoJSON файла с границами округов
state_geo = '/datasets/admin_level_geomap.geojson'

# Координаты центра Москвы
moscow_lat, moscow_lng = 55.751244, 37.618423

# Создание карты Москвы
m3 = Map(location=[moscow_lat, moscow_lng], zoom_start=10, tiles='Cartodb Positron')

# Создание пустого кластера и добавление его на карту
marker_cluster = MarkerCluster().add_to(m3)

# Функция для создания кластеров
def create_clusters(row):
    Marker(
        [row['lat'], row['lng']],
        popup=f"{row['name']}",
    ).add_to(marker_cluster)

# Применение функции create_clusters() к каждой строке DataFrame
coffeeshop_places.apply(create_clusters, axis=1)

# Добавление хоровой карты на карту
Choropleth(
    geo_data=state_geo,
    data=coffeeshop_per_district,
    columns=['district', 'count'],
    key_on='feature.properties.name',  
    fill_color='PuRd',
    fill_opacity=0.4,
    legend_name='Количество кофеен в административных округах Москвы',
).add_to(m3)

# Вывод карты
m3


# #### Промежуточный вывод

# Всего в полученном датасете 1413 кофеен. Самое большое количество кофеен расположено в Центральном районе (428), наименьшее количество кофеен в Северо-Западном административном округе (62). 
# 
# Но основании расположения кофеен на карте можно наблюдать снижение количества заведений данной категории при удалении от центра города.

# ### Круглосуточные кофейни

# Отфильтруем созданный ранее датасет ***coffeeshop_places*** по столбцу ***is_24_7***, так как столбец содержит значения  True/False, на интересубт значения True - означающее что заведение работает круглосуточно. 

# In[46]:


coffeeshop_places_24_7 = coffeeshop_places[coffeeshop_places['is_24_7'] == True]
coffeeshop_places_24_7


# 76 круглосуточных кофеен в Москве. Посмотрим в каких районах таких больше всего.

# In[47]:


coffeeshop_per_district_24_7 = coffeeshop_places_24_7.groupby('district').size().reset_index(name='count')
coffeeshop_per_district_24_7.columns = ['district', 'count']
coffeeshop_per_district_24_7 = coffeeshop_per_district_24_7.sort_values(by = 'count', ascending = False)
coffeeshop_per_district_24_7


# In[48]:


fig = px.bar(coffeeshop_per_district_24_7, # загружаем данные и заново их сортируем
             x='count', # указываем столбец с данными для оси X
             y='district', # указываем столбец с данными для оси Y
             text=coffeeshop_per_district_24_7['count'].astype(str),
             template='plotly_white')
# оформляем график
fig.update_layout(title='Количество круглосуточных кофеен по административным округам Москвы',
                   xaxis_title='Количество заведний',
                   yaxis_title='Админитсративный округ')
fig.show() 


# #### Промежуточный вывод

# Достаточно ожидаемый результат - Центральный административный округ лидирует по количеству круглосуточных кофеен (38). Интересно что в каждом округе присутствуют такие кофейни - минимум по одной.

# ### Рейтинги кофеен по районам

# In[49]:


coffeeshop_rating = (coffeeshop_places.groupby('district').agg(rating_mean=('rating', 'mean')).sort_values(by='rating_mean', ascending=False).reset_index()).round(2)
coffeeshop_rating.columns = ['district', 'rating_mean']
coffeeshop_rating


# Перенесем рейтинги на фоновую картограмму (Хороплет).

# In[50]:


state_geo = '/datasets/admin_level_geomap.geojson'

# moscow_lat - широта центра Москвы, moscow_lng - долгота центра Москвы
moscow_lat, moscow_lng = 55.751244, 37.618423

# создаём карту Москвы
m4 = Map(location=[moscow_lat, moscow_lng], zoom_start=10, tiles='Cartodb Positron')

# создаём хороплет с помощью конструктора Choropleth и добавляем его на карту
Choropleth(
    geo_data=state_geo,
    data=coffeeshop_rating,
    columns=['district', 'rating_mean'],
    key_on='feature.name',
    fill_color='YlGnBu',
    fill_opacity=0.8,
    legend_name='Средний рейтинг кофеен по районам Москвы',
).add_to(m4)

# выводим карту
m4


# #### Промежуточный вывод

# Центральный и Северо-Западный административные округа исмеют самые высокие рейтинги кофеен (4.34 и 4.33 соответственно). Самый низкий рейтинг в Западном административном округе (4.20).

# ### Определение стоимости чашки капучино

# В изначальном датасете ***places***, у нас есть столбец со средней стоимостью чашки кофе. Посммотрим на числовое описание столбца с этим показателем.

# In[51]:


coffeeshop_places['middle_coffee_cup'].describe()


# Минимальная стоимость чашки капучино в Моксковской кофейне 60 рублей, а максимальная 1568 рублей. Средняя стоимость чашки 175 рублей. 
# 
# Если рассмотреть подозрительное значение 1568 рублей за чашку кофе - это ошибочная запись. 

# In[52]:


coffee_1568 = coffeeshop_places[coffeeshop_places['middle_coffee_cup'] == 1568]
coffee_1568 


# Это заведение сети "Шоколадница" имеющее средний ценовой рейтинг. Выведем все заведения этой сети и посмотри указаны ли цены в других заведениях.

# In[53]:


Shokoladnica = coffeeshop_places[
    (coffeeshop_places['name'] == 'шоколадница') & 
    (coffeeshop_places['district'] == 'Восточный административный округ')
]
Shokoladnica


# Действительно, средняя цена чашки кофе в Шоколаднице расположенной с Восточно административном округе 250-256 рублей. Можно точно сказать что это ошибочное значение. Но для решения нашей задачи - это не беда. Так как планируется отрытие кофейни не яваляющейся сетевой - по крайне мере на первых этапах. Известно что сетевые заведения могут предлагать более низкую стоимость продукции, поэтому отфильтруем только несетевые заведения. И посмотрим на среднюю стоимость чашки кофе.

# In[54]:


coffeeshop_no_chain = coffeeshop_places[coffeeshop_places['chain'] == 0]
coffeeshop_no_chain


# Получаем 693 несетевые кофейни. Посмотрим на средний чек по районам.

# In[55]:


coffeeshop_no_chai_avg = (coffeeshop_no_chain.groupby('district').agg(avg_middle_coffee_cup=('middle_coffee_cup', 'mean')).sort_values(by='avg_middle_coffee_cup', ascending=False).reset_index()).round(2)
coffeeshop_no_chai_avg


# Визуалиризируем информацию по районам.

# In[56]:


state_geo = '/datasets/admin_level_geomap.geojson'

# moscow_lat - широта центра Москвы, moscow_lng - долгота центра Москвы
moscow_lat, moscow_lng = 55.751244, 37.618423

# создаём карту Москвы
m5 = Map(location=[moscow_lat, moscow_lng], zoom_start=10, tiles='Cartodb Positron')

# создаём хороплет с помощью конструктора Choropleth и добавляем его на карту
Choropleth(
    geo_data=state_geo,
    data=coffeeshop_no_chai_avg,
    columns=['district', 'avg_middle_coffee_cup'],
    key_on='feature.name',
    fill_color='YlGnBu',
    fill_opacity=0.8,
    legend_name='Средняя стоимость чашки капучино по районам Москвы',
).add_to(m5)

# выводим карту
m5


# #### Промежуточный вывод

# Центральный и Юго-Западный административные округа имеют самую высокую стоимость чашки кофе (199 и 197 рублей). Самая низкая стоимость в Восточном административном округе (137 рублей).

# ### Рекомендации по открытию кофейни

# - ***Центральный округ***. Здесь лидирующее количество кофеен в городе, так как центр наиболее оживленная часть города и можно быть уверенным в досточности трафика. Так же cтоит учесть что рассматривать данный район стоит при наличии интересной концепции заведения - для того чтобы выделиться среди конкурентов. Выбор этого района потребует вложений в маркетинг, так как нужно будет выделиться на фоне большого количества конкурентов с наиболее высокими рейтингами в городе. При выборе этого района модно ориентировать на круглосуточный формат. 
# 
# - ***Северный округ***. В данном округе в 2 раза меньше Кофеен чем в Центральном, при этом по их количеству он занимает 2 место. Значит - спрос есть, стоимость аренды ниже, конкуренции меньше. По рейтингу заведений этот район на 3 месте, что позволит при должном уровне обслуживания и концепции Кофейни выделиться среди других заведений. Хороший вариант для старта нового заведения. 
# 
# - ***Западный***. Занимает 4 место по количеству кофеен, при этом на 2м месте по количеству круглосточных. Значит круглосуточный формат также востребован для этого округа - значит трафик позволяет. Интересно что стоимость чашки кофе здесь 197 рублей - почти как и в Центральном округе, а вот средний рейтинг самый низкий. Это может означать что при должном уровне заведения (концепции, качества и обслуживания) и небольшом снижении стоимости по сравнению со средним показателем веротяноть успеха будет выше по сравнению в Центральным и Северным округами.  

# ## Презентация

# https://drive.google.com/file/d/1msVjqWC6IGNFWCRgS1TUycubzvicLl9X/view?usp=sharing
